'use strict';

const Combo  = require('./Combo');
const Filter = require('./Filter');

const Asm = require('./utils/Assembler');

const ReadString = require('./tests/ReadString');


const data1 = {a: 1, b: true, c: ["d"]};
const filter1 = /^(|a|c)$/;

const data2 = {a: {b: {c: 1}}, b: {b: {c: 2}}, c: {b: {c: 3}}};
const filter2 = /^(?:a|c)\.b\b/;

const data3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
const filter3 = s => s.length == 1 && typeof s[0] == 'number' && s[0] % 2;

const data = JSON.stringify(data3);
console.log(data);

const filter = filter3;

const pipeline = new ReadString(data).
    pipe(new Combo({packKeys: true, packStrings: true, packNumbers: true})).
    pipe(new Filter({filter}));

const asm = new Asm();

pipeline.on('data', function (chunk) {
	console.log(chunk);
    asm[chunk.name] && asm[chunk.name](chunk.value);
});

pipeline.on('end', function () {
    console.log(JSON.stringify(asm.current));
});
