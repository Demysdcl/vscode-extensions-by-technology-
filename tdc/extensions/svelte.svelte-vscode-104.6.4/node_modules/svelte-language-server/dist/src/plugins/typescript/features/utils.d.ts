import ts from 'typescript';
import { Position } from 'vscode-languageserver';
import { Document } from '../../../lib/documents';
import { DocumentSnapshot, SnapshotFragment, SvelteDocumentSnapshot, SvelteSnapshotFragment } from '../DocumentSnapshot';
import { LSAndTSDocResolver } from '../LSAndTSDocResolver';
/**
 * If the given original position is within a Svelte starting tag,
 * return the snapshot of that component.
 */
export declare function getComponentAtPosition(lsAndTsDocResovler: LSAndTSDocResolver, lang: ts.LanguageService, doc: Document, tsDoc: SvelteDocumentSnapshot, fragment: SvelteSnapshotFragment, originalPosition: Position): SvelteDocumentSnapshot | null;
/**
 * Checks if this a section that should be completely ignored
 * because it's purely generated.
 */
export declare function isInGeneratedCode(text: string, start: number, end: number): boolean;
/**
 * Checks that this isn't a text span that should be completely ignored
 * because it's purely generated.
 */
export declare function isNoTextSpanInGeneratedCode(text: string, span: ts.TextSpan): boolean;
export declare class SnapshotFragmentMap {
    private resolver;
    private map;
    constructor(resolver: LSAndTSDocResolver);
    set(fileName: string, content: {
        fragment: SnapshotFragment;
        snapshot: DocumentSnapshot;
    }): void;
    get(fileName: string): {
        fragment: SnapshotFragment;
        snapshot: DocumentSnapshot;
    } | undefined;
    getFragment(fileName: string): SnapshotFragment | undefined;
    retrieve(fileName: string): Promise<{
        fragment: SnapshotFragment;
        snapshot: DocumentSnapshot;
    }>;
    retrieveFragment(fileName: string): Promise<SnapshotFragment>;
}
