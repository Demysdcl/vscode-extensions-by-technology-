import * as VSCode from 'vscode';
import { LanguageClient, LanguageClientOptions } from 'vscode-languageclient';
import { Event } from 'vscode';
import { JVM } from '@pivotal-tools/jvm-launch-utils';
export interface ActivatorOptions {
    DEBUG: boolean;
    CONNECT_TO_LS?: boolean;
    TRACE?: boolean;
    extensionId: string;
    clientOptions: LanguageClientOptions;
    jvmHeap?: string;
    workspaceOptions: VSCode.WorkspaceConfiguration;
    checkjvm?: (context: VSCode.ExtensionContext, jvm: JVM) => any;
    preferJdk?: boolean;
    highlightCodeLensSettingKey?: string;
    explodedLsJarData?: ExplodedLsJarData;
}
export interface ExplodedLsJarData {
    lsLocation: string;
    mainClass: string;
    configFileName?: string;
}
export declare function activate(options: ActivatorOptions, context: VSCode.ExtensionContext): Thenable<LanguageClient>;
export interface ListenableSetting<T> {
    value: T;
    onDidChangeValue: VSCode.Event<void>;
}
export declare class ListenablePreferenceSetting<T> implements ListenableSetting<T> {
    private section;
    private _onDidChangeValue;
    constructor(section: string);
    get value(): T;
    get onDidChangeValue(): Event<void>;
}
